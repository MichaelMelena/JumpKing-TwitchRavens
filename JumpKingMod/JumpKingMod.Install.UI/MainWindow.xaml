<Window x:Class="JumpKingRavensMod.Install.UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:Input="clr-namespace:Microsoft.Xna.Framework.Input;assembly=MonoGame.Framework"
        xmlns:local="clr-namespace:JumpKingRavensMod.Install.UI"
        xmlns:settings="clr-namespace:JumpKingRavensMod.Settings;assembly=JumpKingRavensMod.Settings"
        mc:Ignorable="d"
        Title="Jump King Chat Ravens Mod Installer" SizeToContent="WidthAndHeight" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
   
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="boolToVisibilityConverter" />

        <ObjectDataProvider x:Key="keysEnumValues" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="Input:Keys"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <Style x:Key="ToggleFlipSwitchStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <StackPanel Orientation="Horizontal">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Border x:Name="on" Width="60" Height="25" Background="LightGray" CornerRadius="2,0,0,4" Margin="10,0,0,0">
                                <TextBlock x:Name="onText" Text="Twitch" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <Border x:Name="off" Width="60" Height="25" Background="LightGray" CornerRadius="0,2,4,0">
                                <TextBlock x:Name="offText" Text="YouTube" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="on" Property="Background" Value="#6441a5"/>
                                <Setter TargetName="onText" Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="off" Property="Background" Value="#FF0000"/>
                                <Setter TargetName="offText" Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                                <Setter TargetName="on" Property="Background" Value="LightGray"/>
                                <Setter TargetName="onText" Property="Foreground" Value="DarkGray"/>
                                <Setter TargetName="off" Property="Background" Value="LightGray"/>
                                <Setter TargetName="offText" Property="Foreground" Value="DarkGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    
    <DockPanel>
        <Menu DockPanel.Dock="Top" Padding="2,0,0,2">
            <MenuItem Header="_File">
                <MenuItem Header="_About" Click="About_Click"/>
                <Separator/>
                <MenuItem Header="_Quit" Click="Quit_Click"/>
            </MenuItem>
        </Menu>
        <StackPanel Margin="5">
            <GroupBox Header="Install">
                <StackPanel>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.Resources>
                            <ToolTip x:Key="installDirectoryTooltip" DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
                                <TextBlock>
                                    The Jump King directory containing the JumpKing.exe file
                                </TextBlock>
                            </ToolTip>
                            <ToolTip x:Key="modDirectoryTooltip" DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
                                <TextBlock>
                                    The directory containing the Mod .dlls in the install package
                                </TextBlock>
                            </ToolTip>
                        </Grid.Resources>
                        <!-- Install Directory -->
                        <TextBlock Grid.Row="0" Grid.Column="0" Margin="5,2,10,2" Text="Install Directory:" ToolTip="{StaticResource installDirectoryTooltip}" />
                        <TextBox Grid.Row="0" Grid.Column="1" Margin="0,2,0,2" Text="{Binding GameDirectory, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="{StaticResource installDirectoryTooltip}" />
                        <Button Grid.Row="0" Grid.Column="2" Margin="5,2,0,2" Content="..." MinWidth="30" MaxWidth="30" Command="{Binding BrowseGameDirectoryCommand}" />
                        <!-- Mod Directory -->
                        <TextBlock Grid.Row="1" Grid.Column="0" Margin="5,2,10,2" Text="Mod Directory:" ToolTip="{StaticResource modDirectoryTooltip}"/>
                        <TextBox Grid.Row="1" Grid.Column="1" Margin="0,2,0,2" Text="{Binding ModDirectory, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="{StaticResource modDirectoryTooltip}"/>
                        <Button Grid.Row="1" Grid.Column="2" Margin="5,2,0,2" Content="..." MinWidth="30" MaxWidth="30" Command="{Binding BrowseModDirectoryCommand}" />
                    </Grid>
                    <!-- Install Error -->
                    <TextBlock Text="{Binding InstallErrorMessage}" Foreground="Red" Visibility="{Binding ShowInstallErrorMessage, Converter={StaticResource boolToVisibilityConverter}}"/>
                    <!-- Install Button-->
                    <Button Content="Install" MaxWidth="70" MinWidth="70" Margin="5" HorizontalAlignment="Right" Command="{Binding InstallCommand}"/>
                </StackPanel>
            </GroupBox>
            
            <!-- Settings -->
            <GroupBox Header="Settings">
                <StackPanel>
                    <ToggleButton Content="Streaming Platform:" Margin="2,2,10,2" IsEnabled="{Binding AreRavenModSettingsLoaded}" Style="{StaticResource ToggleFlipSwitchStyle}" IsChecked="{Binding IsStreamingOnTwitch, Mode=TwoWay}" Checked="ToggleButton_Checked" Unchecked="ToggleButton_Unchecked"/>
                    <TabControl x:Name="tabControl" IsEnabled="{Binding AreRavenModSettingsLoaded}" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Padding="5" SelectedIndex="0">
                        <TabItem x:Name="tabItemTwitch" Header="Twitch" Visibility="{Binding IsStreamingOnTwitch, Converter={StaticResource boolToVisibilityConverter}}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.Resources>
                                    <ToolTip x:Key="twitchAccountTooltip" DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
                                        <TextBlock>
                                            The Twitch Account to use for listening to the chat.
                                            <LineBreak/>
                                            This will only allow us to read messages using this account, not send them.
                                        </TextBlock>
                                    </ToolTip>
                                    <ToolTip x:Key="oAuthTooltip" DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
                                        <TextBlock>
                                            This OAuth token gives us permission to use the account. 
                                            <LineBreak/>
                                            This token should not be shared with anyone else.
                                        </TextBlock>
                                    </ToolTip>
                                </Grid.Resources>
                                <!-- Twitch Account -->
                                <TextBlock Grid.Row="0" Grid.Column="0" Margin="5,2,10,2" ToolTip="{StaticResource twitchAccountTooltip}" Text="Twitch Account Name:" />
                                <TextBox Grid.Row="1" Grid.Column="0" Margin="0,2,0,2" Text="{Binding TwitchSettings.TwitchAccountName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding AreRavenModSettingsLoaded}" ToolTip="{StaticResource twitchAccountTooltip}"/>
                                <!-- OAuth -->
                                <TextBlock Grid.Row="2" Grid.Column="0" Margin="5,2,10,2" ToolTip="{StaticResource oAuthTooltip}" Text="Twitch OAuth:" />
                                <TextBlock Grid.Row="3" Grid.Column="0" Margin="5,0,10,0" FontSize="9" ToolTip="{StaticResource oAuthTooltip}">
                                    <Italic>
                                        You shouldn't show this to anyone!
                                        To generate an OAuth Token,
                                        <Hyperlink NavigateUri="https://github.com/PhantomBadger/JumpKing-TwitchRavens/blob/main/docs/HowToGenerateCredentials.md#twitch" RequestNavigate="Hyperlink_RequestNavigate">click here</Hyperlink>
                                    </Italic>
                                </TextBlock>
                                <TextBox Grid.Row="4" Grid.Column="0" Margin="0,2,0,2" Text="{Binding TwitchSettings.TwitchOAuth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding AreRavenModSettingsLoaded}" ToolTip="{StaticResource oAuthTooltip}"/>
                            </Grid>
                    </TabItem>
                        <TabItem x:Name="tabItemYouTube" Header="YouTube" Visibility="{Binding IsStreamingOnYouTube, Converter={StaticResource boolToVisibilityConverter}}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.Resources>
                                    <ToolTip x:Key="youTubeAccountTooltip" DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
                                        <TextBlock>
                                            The name of the YouTube Channel to Listen to
                                            <LineBreak/>
                                            We will look for active streams on this account and listen for chat messages
                                        </TextBlock>
                                    </ToolTip>
                                    <ToolTip x:Key="youTubeAPITooltip" DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
                                        <TextBlock>
                                            This YouTube API token gives this application permission to use YouTube's API
                                        </TextBlock>
                                    </ToolTip>
                                </Grid.Resources>
                                <!-- YouTube Account -->
                                <TextBlock Grid.Row="0" Grid.Column="0" Margin="5,2,10,2" ToolTip="{StaticResource youTubeAccountTooltip}" Text="YouTube Account Name:" />
                                <TextBox Grid.Row="1" Grid.Column="0" Margin="0,2,0,2" Text="{Binding YouTubeSettings.YouTubeAccountName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding AreRavenModSettingsLoaded}" ToolTip="{StaticResource youTubeAccountTooltip}"/>
                                <!-- API Key -->
                                <TextBlock Grid.Row="2" Grid.Column="0" Margin="5,2,10,2" ToolTip="{StaticResource youTubeAPITooltip}" Text="YouTube API Key:" />
                                <TextBlock Grid.Row="3" Grid.Column="0" Margin="5,0,10,0" FontSize="9" ToolTip="{StaticResource youTubeAPITooltip}">
                                    <Italic>
                                        You shouldn't show this to anyone!
                                        To generate this API key
                                        <Hyperlink NavigateUri="https://github.com/PhantomBadger/JumpKing-TwitchRavens/blob/main/docs/HowToGenerateCredentials.md#youtube" RequestNavigate="Hyperlink_RequestNavigate">click here</Hyperlink>
                                    </Italic>
                                </TextBlock>
                                <TextBox Grid.Row="4" Grid.Column="0" Margin="0,2,0,2" Text="{Binding YouTubeSettings.YouTubeAPIKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding AreRavenModSettingsLoaded}" ToolTip="{StaticResource youTubeAPITooltip}"/>
                                <!-- Connect Key -->
                                <TextBlock Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2" Margin="5,2,10,2" IsEnabled="{Binding AreRavenModSettingsLoaded}" Text="Connect Key:" ToolTip="When pressed this will cause the mod to connect/disconnect from the YouTube Stream" />
                                <ComboBox Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="2" IsEnabled="{Binding AreRavenModSettingsLoaded}" ItemsSource="{Binding Source={StaticResource keysEnumValues}}" SelectedItem="{Binding YouTubeSettings.ConnectKey, Mode=TwoWay}" ToolTip="When pressed this will cause the mod to connect/disconnect from the YouTube Stream"/>
                            </Grid>
                        </TabItem>
                        <TabItem x:Name="tabItemRavens" Header="Ravens">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="FirstColumn"/>
                                    <ColumnDefinition Width="*" SharedSizeGroup="SecondColumn"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <!-- Enabled -->
                                    <RowDefinition Height="Auto"/>
                                    <!-- Seperator -->
                                    <RowDefinition Height="Auto"/>
                                    <!-- Debug Toggle -->
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <!-- Debug Clear -->
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <!-- Sub Mode Toggle -->
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <!-- Max Count -->
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <!-- Time Alive -->
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <!-- Trigger Type -->
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <!-- Trigger Settings Row 1 -->
                                    <RowDefinition Height="Auto"/>
                                    <!-- Trigger Settings Row 2 -->
                                    <RowDefinition Height="Auto"/>
                                    <!-- Trigger Settings Row 3 -->
                                    <RowDefinition Height="Auto"/>
                                    <!-- Gun Seperator -->
                                    <RowDefinition Height="Auto"/>
                                    <!-- Gun Enabled-->
                                    <RowDefinition Height="Auto"/>
                                    <!-- Gun Toggle -->
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.Resources>
                                    <ObjectDataProvider x:Key="twitchRavenTriggerTypeEnumValues" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
                                        <ObjectDataProvider.MethodParameters>
                                            <x:Type TypeName="settings:TwitchRavenTriggerTypes"/>
                                        </ObjectDataProvider.MethodParameters>
                                    </ObjectDataProvider>
                                    <ObjectDataProvider x:Key="youTubeRavenTriggerTypeEnumValues" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
                                        <ObjectDataProvider.MethodParameters>
                                            <x:Type TypeName="settings:YouTubeRavenTriggerTypes"/>
                                        </ObjectDataProvider.MethodParameters>
                                    </ObjectDataProvider>
                                    <ToolTip x:Key="enabledRavenTooltip" DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
                                        <TextBlock>
                                            If enabled, the mod will spawn ravens based on specific triggers
                                        </TextBlock>
                                    </ToolTip>
                                    <ToolTip x:Key="twitchRavenTriggerTooltip" DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
                                        <TextBlock>
                                            The trigger for spawning the ravens via Twitch
                                            <LineBreak/>
                                            <Bold>ChatMessage:</Bold> Whenever a Message is typed in the Twitch Chat
                                            <LineBreak/>
                                            <Bold>ChannelPointReward:</Bold> Whenever a specified Channel Point Reward is redeemed
                                            <LineBreak/>
                                            <Bold>Insult:</Bold> Whenever you fall off screen
                                        </TextBlock>
                                    </ToolTip>
                                    <ToolTip x:Key="youTubeRavenTriggerTooltip" DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
                                        <TextBlock>
                                            The trigger for spawning the ravens via YouTube
                                            <LineBreak/>
                                            <Bold>ChatMessage:</Bold> Whenever a Message is typed in the YouTube Chat
                                        </TextBlock>
                                    </ToolTip>
                                    <ToolTip x:Key="ravenDebugToggleKeyTooltip" DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
                                        <TextBlock>
                                            Provides a key you can press to toggle the Ravens spawning during the game's run.
                                            Useful in the event of a hate raid or if it's getting a bit much.
                                        </TextBlock>
                                    </ToolTip>
                                    <ToolTip x:Key="ravenDebugClearKeyTooltip" DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
                                        <TextBlock>
                                            Provides a key you can press to clear all Ravens currently on the screen.
                                            Useful in case someone says something inappropriate.
                                        </TextBlock>
                                    </ToolTip>
                                    <ToolTip x:Key="ravenSubToggleKeyTooltip" DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
                                        <TextBlock>
                                            Provides a key you can press to toggle Sub Mode for the Stream Messages.
                                            Useful if you want to gate interaction behind subs in the event of a 
                                            raid or similar.
                                        </TextBlock>
                                    </ToolTip>
                                    <ToolTip x:Key="ravenTimeAlivetooltip" DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
                                        <TextBlock>
                                            The time a raven should stay on the floor after landing in seconds.
                                            This is how long it will hang around displaying the message for.
                                        </TextBlock>
                                    </ToolTip>
                                    <ToolTip x:Key="gunEnabledTooltip" DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
                                        <TextBlock>
                                            If Enabled, you will be able to enter a "Gun Mode" and shoot down the 
                                            Ravens during the game using your mouse.
                                        </TextBlock>
                                    </ToolTip>
                                    <ToolTip x:Key="gunKeyTooltip" DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
                                        <TextBlock>
                                            Provides a key you can press to enter or exit the "Gun Mode".
                                        </TextBlock>
                                    </ToolTip>
                                </Grid.Resources>
                                <!-- Raven Enabled -->
                                <TextBlock Grid.Row="0" Grid.Column="0" Margin="5,2,10,2" Text="Enabled: " />
                                <CheckBox Grid.Row="0" Grid.Column="1" Margin="5,2,10,2" HorizontalAlignment="Right" IsChecked="{Binding Ravens.RavenEnabled, Mode=TwoWay}" IsEnabled="{Binding AreRavenModSettingsLoaded}"/>
                                <!-- Separator -->
                                <Separator Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Visibility="{Binding Ravens.RavenEnabled, Converter={StaticResource boolToVisibilityConverter}}"/>
                                <!-- Toggle Active Key -->
                                <TextBlock Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Margin="5,2,10,2" ToolTip="{StaticResource ravenDebugToggleKeyTooltip}" Visibility="{Binding Ravens.RavenEnabled, Converter={StaticResource boolToVisibilityConverter}}" Text="Toggle Raven Spawning Key:" />
                                <ComboBox Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" ToolTip="{StaticResource ravenDebugToggleKeyTooltip}" IsEnabled="{Binding AreRavenModSettingsLoaded}" Visibility="{Binding Ravens.RavenEnabled, Converter={StaticResource boolToVisibilityConverter}}" ItemsSource="{Binding Source={StaticResource keysEnumValues}}" SelectedItem="{Binding Ravens.RavenToggleDebugKey, Mode=TwoWay}"/>
                                <!-- Clear Key -->
                                <TextBlock Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" Margin="5,2,10,2" ToolTip="{StaticResource ravenDebugClearKeyTooltip}" Visibility="{Binding Ravens.RavenEnabled, Converter={StaticResource boolToVisibilityConverter}}" Text="Clear Key:" />
                                <ComboBox Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2" ToolTip="{StaticResource ravenDebugClearKeyTooltip}" IsEnabled="{Binding AreRavenModSettingsLoaded}" Visibility="{Binding Ravens.RavenEnabled, Converter={StaticResource boolToVisibilityConverter}}" ItemsSource="{Binding Source={StaticResource keysEnumValues}}" SelectedItem="{Binding Ravens.RavenClearDebugKey, Mode=TwoWay}"/>
                                <!-- Toggle Sub Mode Key -->
                                <TextBlock Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="2" Margin="5,2,10,2" ToolTip="{StaticResource ravenSubToggleKeyTooltip}" Visibility="{Binding Ravens.RavenEnabled, Converter={StaticResource boolToVisibilityConverter}}" Text="Toggle Sub Mode Key:" />
                                <ComboBox Grid.Row="7" Grid.Column="0" Grid.ColumnSpan="2" ToolTip="{StaticResource ravenSubToggleKeyTooltip}" IsEnabled="{Binding AreRavenModSettingsLoaded}" Visibility="{Binding Ravens.RavenEnabled, Converter={StaticResource boolToVisibilityConverter}}" ItemsSource="{Binding Source={StaticResource keysEnumValues}}" SelectedItem="{Binding Ravens.RavenSubModeToggleKey, Mode=TwoWay}"/>
                                <!-- Max Number of Ravens-->
                                <TextBlock Grid.Row="8" Grid.Column="0" Grid.ColumnSpan="2" Margin="5,2,10,2" Visibility="{Binding Ravens.RavenEnabled, Converter={StaticResource boolToVisibilityConverter}}" Text="Max Number of Ravens:" />
                                <TextBox Grid.Row="9" Grid.Column="0" Grid.ColumnSpan="2" Visibility="{Binding Ravens.RavenEnabled, Converter={StaticResource boolToVisibilityConverter}}" Text="{Binding Ravens.MaxRavensCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <!-- Ravens Time On Screen-->
                                <TextBlock Grid.Row="10" Grid.Column="0" Grid.ColumnSpan="2" Margin="5,2,10,2" ToolTip="{StaticResource ravenTimeAlivetooltip}" Visibility="{Binding Ravens.RavenEnabled, Converter={StaticResource boolToVisibilityConverter}}" Text="Message Duration (seconds):" />
                                <TextBox Grid.Row="11" Grid.Column="0" Grid.ColumnSpan="2" ToolTip="{StaticResource ravenTimeAlivetooltip}" Visibility="{Binding Ravens.RavenEnabled, Converter={StaticResource boolToVisibilityConverter}}" Text="{Binding Ravens.MessageDurationInSeconds, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <!-- Raven Trigger -->
                                <!-- Twitch -->
                                <TextBlock Grid.Row="12" Grid.Column="0" Grid.ColumnSpan="2" Margin="5,2,10,2" ToolTip="{StaticResource twitchRavenTriggerTooltip}" Text="Trigger Type:">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Ravens.RavenEnabled}" Value="True"/>
                                                        <Condition Binding="{Binding IsStreamingOnTwitch}" Value="True"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <ComboBox Grid.Row="13" Grid.Column="0" Grid.ColumnSpan="2" ToolTip="{StaticResource twitchRavenTriggerTooltip}" IsEnabled="{Binding AreRavenModSettingsLoaded}" ItemsSource="{Binding Source={StaticResource twitchRavenTriggerTypeEnumValues}}" SelectedItem="{Binding Ravens.RavenTriggerType, Mode=TwoWay}">
                                    <ComboBox.Style>
                                        <Style TargetType="{x:Type ComboBox}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Ravens.RavenEnabled}" Value="True"/>
                                                        <Condition Binding="{Binding IsStreamingOnTwitch}" Value="True"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ComboBox.Style>
                                </ComboBox>
                                <!-- YouTube -->
                                <TextBlock Grid.Row="12" Grid.Column="0" Grid.ColumnSpan="2" Margin="5,2,10,2" ToolTip="{StaticResource youTubeRavenTriggerTooltip}" Text="Trigger Type:">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Ravens.RavenEnabled}" Value="True"/>
                                                        <Condition Binding="{Binding IsStreamingOnYouTube}" Value="True"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <ComboBox Grid.Row="13" Grid.Column="0" Grid.ColumnSpan="2" ToolTip="{StaticResource youTubeRavenTriggerTooltip}" IsEnabled="{Binding AreRavenModSettingsLoaded}"  ItemsSource="{Binding Source={StaticResource youTubeRavenTriggerTypeEnumValues}}" SelectedItem="{Binding Ravens.YouTubeRavenTriggerType, Mode=TwoWay}">
                                    <ComboBox.Style>
                                        <Style TargetType="{x:Type ComboBox}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Ravens.RavenEnabled}" Value="True"/>
                                                        <Condition Binding="{Binding IsStreamingOnYouTube}" Value="True"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ComboBox.Style>
                                </ComboBox>
                                <!-- Trigger Settings: Channel Point -->
                                <Grid x:Name="grdChatPointSettings" Grid.Row="14" Grid.Column="0" Grid.ColumnSpan="2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition SharedSizeGroup="FirstColumn"/>
                                        <ColumnDefinition SharedSizeGroup="SharedColumn"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.Style>
                                        <Style TargetType="{x:Type Grid}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Ravens.RavenTriggerType}" Value="ChannelPointReward"/>
                                                        <Condition Binding="{Binding IsStreamingOnTwitch}" Value="True"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Style>
                                    <Separator Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="5,10,10,5" Visibility="{Binding Ravens.RavenEnabled, Converter={StaticResource boolToVisibilityConverter}}" />
                                    <TextBlock Grid.Row="1" Grid.Column="0" Margin="5,2,10,2" Visibility="{Binding Ravens.RavenEnabled, Converter={StaticResource boolToVisibilityConverter}}" Text="Channel Point Reward ID:" />
                                    <TextBlock Grid.Row="2" Grid.Column="0" Margin="5,2,10,2" Grid.ColumnSpan="2" FontSize="9" TextWrapping="Wrap" Visibility="{Binding Ravens.RavenEnabled, Converter={StaticResource boolToVisibilityConverter}}">
                                        <Italic>
                                            If you're not sure how to get this, 
                                            <Hyperlink NavigateUri="https://www.instafluff.tv/TwitchCustomRewardID/?channel=YOURNAME" RequestNavigate="Hyperlink_RequestNavigate">
                                                click here 
                                            </Hyperlink>
                                            replace the 'YOURNAME' in the URL with your twitch username
                                            and then redeem the reward in your chat.
                                        </Italic>
                                    </TextBlock>
                                    <TextBox Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Margin="5,2,5,2" IsEnabled="{Binding AreRavenModSettingsLoaded}" Visibility="{Binding Ravens.RavenEnabled, Converter={StaticResource boolToVisibilityConverter}}" Text="{Binding Ravens.RavensChannelPointID, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </Grid>
                                <!-- Trigger Settings: Excluded Term Filter -->
                                <Grid x:Name="grdExcludedWords" Grid.Row="15" Grid.Column="0" Grid.ColumnSpan="2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.Style>
                                        <Style TargetType="{x:Type Grid}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsStreamingOnTwitch}" Value="True"/>
                                                        <Condition Binding="{Binding Ravens.RavenTriggerType}" Value="ChatMessage"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsStreamingOnTwitch}" Value="True"/>
                                                        <Condition Binding="{Binding Ravens.RavenTriggerType}" Value="ChannelPointReward"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsStreamingOnYouTube}" Value="True"/>
                                                        <Condition Binding="{Binding Ravens.YouTubeRavenTriggerType}" Value="ChatMessage"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Style>
                                    <Separator Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Margin="5,10,10,5" Visibility="{Binding Ravens.RavenEnabled, Converter={StaticResource boolToVisibilityConverter}}" />
                                    <TextBlock Grid.Row="1" Grid.Column="0" Margin="5,2,10,2" Visibility="{Binding Ravens.RavenEnabled, Converter={StaticResource boolToVisibilityConverter}}" Text="Excluded Terms:" />
                                    <TextBox Grid.Row="2" Grid.Column="0" Margin="5,2,5,2" Visibility="{Binding Ravens.RavenEnabled, Converter={StaticResource boolToVisibilityConverter}}" 
                                             Text="{Binding Ravens.CandidateExcludedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    <Button Grid.Row="2" Grid.Column="1" Content="+" Padding="5,0,5,0" Margin="0,2,5,2" Visibility="{Binding Ravens.RavenEnabled, Converter={StaticResource boolToVisibilityConverter}}"
                                            Command="{Binding AddExcludedTermCommand}"/>
                                    <Button Grid.Row="2" Grid.Column="2" Content="-" Padding="6,0,6,0" Margin="0,2,5,2" Visibility="{Binding Ravens.RavenEnabled, Converter={StaticResource boolToVisibilityConverter}}"
                                            Command="{Binding RemoveExcludedTermCommand}"/>
                                    <ListBox Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" Margin="5,2,5,2" MinHeight="50" MaxHeight="300" Visibility="{Binding Ravens.RavenEnabled, Converter={StaticResource boolToVisibilityConverter}}" 
                                             ItemsSource="{Binding Ravens.ExcludedTerms, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             SelectedIndex="{Binding Ravens.SelectedExcludedItemIndex, Mode=TwoWay}"/>
                                </Grid>
                                <!-- Trigger Settings: Insult List -->
                                <Grid x:Name="grdRavenInsults" Grid.Row="16" Grid.Column="0" Grid.ColumnSpan="2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.Style>
                                        <Style TargetType="{x:Type Grid}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Ravens.RavenTriggerType}" Value="Insult"/>
                                                        <Condition Binding="{Binding IsStreamingOnTwitch}" Value="True"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Style>
                                    <Separator Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Margin="5,10,10,5" Visibility="{Binding Ravens.RavenEnabled, Converter={StaticResource boolToVisibilityConverter}}" />

                                    <!-- Number of Insult Ravens -->
                                    <TextBlock Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Margin="5,2,10,2" Visibility="{Binding Ravens.RavenEnabled, Converter={StaticResource boolToVisibilityConverter}}" Text="Insult Raven Spawn Count:"/>
                                    <TextBox Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Margin="5,2,5,2" Visibility="{Binding Ravens.RavenEnabled, Converter={StaticResource boolToVisibilityConverter}}" Text="{Binding Ravens.InsultRavenSpawnCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                    <!-- Insult List Box -->
                                    <TextBlock Grid.Row="3" Grid.Column="0" Margin="5,2,10,2" Visibility="{Binding Ravens.RavenEnabled, Converter={StaticResource boolToVisibilityConverter}}" Text="Raven Insults:" />
                                    <TextBox Grid.Row="4" Grid.Column="0" Margin="5,2,5,2" Visibility="{Binding Ravens.RavenEnabled, Converter={StaticResource boolToVisibilityConverter}}" 
                                             Text="{Binding Ravens.CandidateRavenInsult, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    <Button Grid.Row="4" Grid.Column="1" Content="+" Padding="5,0,5,0" Margin="0,2,5,2" Visibility="{Binding Ravens.RavenEnabled, Converter={StaticResource boolToVisibilityConverter}}"
                                            Command="{Binding AddRavenInsultCommand}"/>
                                    <Button Grid.Row="4" Grid.Column="2" Content="-" Padding="6,0,6,0" Margin="0,2,5,2" Visibility="{Binding Ravens.RavenEnabled, Converter={StaticResource boolToVisibilityConverter}}"
                                            Command="{Binding RemoveRavenInsultCommand}"/>
                                    <ListBox Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="3" Margin="5,2,5,2" MinHeight="50" MaxHeight="300" Visibility="{Binding Ravens.RavenEnabled, Converter={StaticResource boolToVisibilityConverter}}" 
                                             ItemsSource="{Binding Ravens.RavenInsults, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             SelectedIndex="{Binding Ravens.SelectedRavenInsultIndex, Mode=TwoWay}"/>
                                </Grid>
                                <!-- Gun Seperator -->
                                <Separator Grid.Row="17" Grid.Column="0" Grid.ColumnSpan="2" Margin="0,10,0,5" Visibility="{Binding Ravens.RavenEnabled, Converter={StaticResource boolToVisibilityConverter}}"/>
                                <!-- Gun Enabled -->
                                <TextBlock Grid.Row="18" Grid.Column="0" Margin="5,2,10,2" ToolTip="{StaticResource gunEnabledTooltip}" Visibility="{Binding Ravens.RavenEnabled, Converter={StaticResource boolToVisibilityConverter}}" Text="Gun Mode Enabled: " />
                                <CheckBox Grid.Row="18" Grid.Column="1" Margin="5,2,10,2" ToolTip="{StaticResource gunEnabledTooltip}" Visibility="{Binding Ravens.RavenEnabled, Converter={StaticResource boolToVisibilityConverter}}" HorizontalAlignment="Right" IsChecked="{Binding Ravens.GunEnabled, Mode=TwoWay}" IsEnabled="{Binding AreRavenModSettingsLoaded}"/>
                                <!-- Gun Toggle Key -->
                                <TextBlock Grid.Row="19" Grid.Column="0" Grid.ColumnSpan="2" Margin="5,2,10,2" ToolTip="{StaticResource gunKeyTooltip}" Visibility="{Binding Ravens.GunSettingsVisible, Converter={StaticResource boolToVisibilityConverter}}" Text="Toggle Gun Key:" />
                                <ComboBox Grid.Row="20" Grid.Column="0" Grid.ColumnSpan="2" ToolTip="{StaticResource gunKeyTooltip}" Visibility="{Binding Ravens.GunSettingsVisible, Converter={StaticResource boolToVisibilityConverter}}" ItemsSource="{Binding Source={StaticResource keysEnumValues}}" SelectedItem="{Binding Ravens.GunToggleKey, Mode=TwoWay}"/>
                            </Grid>
                        </TabItem>
                        <TabItem x:Name="tabFallDamage" Header="Fall Damage">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.Resources>
                                    <ToolTip x:Key="fallDamageTooltip" DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
                                        <TextBlock>
                                            When enabled the King will take damage every time he 'splats' on the ground. If your health hits 0 you must restart the map!
                                        </TextBlock>
                                    </ToolTip>
                                    <ToolTip x:Key="fallDamageModifierTooltip" DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
                                        <TextBlock>
                                            A value of 0.1 will mean you take ~48 damage for a full screen of falling. A value of 0.05 is recommended for intermediate players.
                                        </TextBlock>
                                    </ToolTip>
                                    <ToolTip x:Key="fallDamageBloodTooltip" DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
                                        <TextBlock>
                                            If enabled a 'splat' will leave a blood splat on the stage when you land
                                        </TextBlock>
                                    </ToolTip>
                                    <ToolTip x:Key="fallDamageClearBloodTooltip" DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
                                        <TextBlock>
                                            When pressed all blood splatters will be cleared
                                        </TextBlock>
                                    </ToolTip>
                                    <ToolTip x:Key="fallDamageNiceSpawnsTooltip" DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
                                        <TextBlock>
                                            If enabled then dying from fall damage on a DLC map will reset you to the start of
                                            <LineBreak/>
                                            the DLC map instead of the bottom of the base map.
                                        </TextBlock>
                                    </ToolTip>
                                </Grid.Resources>
                                <!-- Fall Damage Enabled -->
                                <TextBlock Grid.Row="0" Grid.Column="0" Margin="5,2,10,2" ToolTip="{StaticResource fallDamageTooltip}" Text="Enabled: " />
                                <CheckBox Grid.Row="0" Grid.Column="1" Margin="5,2,10,2" HorizontalAlignment="Right" ToolTip="{StaticResource fallDamageTooltip}" IsChecked="{Binding FallDamageEnabled, Mode=TwoWay}" IsEnabled="{Binding AreFallDamageModSettingsLoaded}"/>
                                <TextBlock Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="5,2,10,2" FontSize="9" TextWrapping="Wrap">
                                    <Italic>
                                        This mode will be inactive by default in game. 
                                        <LineBreak/>
                                        Use the below Toggle Key to activate it once you start playing!
                                    </Italic>
                                </TextBlock>
                                <!-- Seperator -->
                                <Separator Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Visibility="{Binding FallDamageEnabled, Converter={StaticResource boolToVisibilityConverter}}"/>
                                <!-- Toggle Button -->
                                <TextBlock Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Margin="5,2,10,2" ToolTip="{StaticResource fallDamageTooltip}" Visibility="{Binding FallDamageEnabled, Converter={StaticResource boolToVisibilityConverter}}" Text="Toggle Key:" />
                                <ComboBox Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" ToolTip="{StaticResource fallDamageTooltip}" IsEnabled="{Binding AreFallDamageModSettingsLoaded}" Visibility="{Binding FallDamageEnabled, Converter={StaticResource boolToVisibilityConverter}}" ItemsSource="{Binding Source={StaticResource keysEnumValues}}" SelectedItem="{Binding FallDamageToggleKey, Mode=TwoWay}"/>
                                <!-- Damage Modifier -->
                                <TextBlock Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2" Margin="5,2,10,2" ToolTip="{StaticResource fallDamageModifierTooltip}" Visibility="{Binding FallDamageEnabled, Converter={StaticResource boolToVisibilityConverter}}" Text="Fall Damage Modifier:" />
                                <TextBox Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="2" ToolTip="{StaticResource fallDamageModifierTooltip}" IsEnabled="{Binding AreFallDamageModSettingsLoaded}" Visibility="{Binding FallDamageEnabled, Converter={StaticResource boolToVisibilityConverter}}" Text="{Binding FallDamageModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <!-- Nice Spawns -->
                                <TextBlock Grid.Row="7" Grid.Column="0" Margin="5,2,10,2" ToolTip="{StaticResource fallDamageNiceSpawnsTooltip}" Visibility="{Binding FallDamageEnabled, Converter={StaticResource boolToVisibilityConverter}}" Text="Nice Spawns: " />
                                <CheckBox Grid.Row="7" Grid.Column="1" Margin="5,2,10,2" HorizontalAlignment="Right" ToolTip="{StaticResource fallDamageNiceSpawnsTooltip}" Visibility="{Binding FallDamageEnabled, Converter={StaticResource boolToVisibilityConverter}}" IsChecked="{Binding FallDamageNiceSpawns, Mode=TwoWay}" IsEnabled="{Binding AreFallDamageModSettingsLoaded}"/>
                                <!-- Blood Enabled -->
                                <TextBlock Grid.Row="8" Grid.Column="0" Margin="5,2,10,2" ToolTip="{StaticResource fallDamageBloodTooltip}" Visibility="{Binding FallDamageEnabled, Converter={StaticResource boolToVisibilityConverter}}" Text="Blood Splat Enabled: " />
                                <CheckBox Grid.Row="8" Grid.Column="1" Margin="5,2,10,2" HorizontalAlignment="Right" ToolTip="{StaticResource fallDamageBloodTooltip}" Visibility="{Binding FallDamageEnabled, Converter={StaticResource boolToVisibilityConverter}}" IsChecked="{Binding FallDamageBloodSplatEnabled, Mode=TwoWay}" IsEnabled="{Binding AreFallDamageModSettingsLoaded}"/>
                                <!-- Clear Blood Button -->
                                <TextBlock Grid.Row="9" Grid.Column="0" Grid.ColumnSpan="2" Margin="5,2,10,2" ToolTip="{StaticResource fallDamageClearBloodTooltip}" Visibility="{Binding FallDamageBloodSplatVisibility, Converter={StaticResource boolToVisibilityConverter}}" Text="Clear Blood Key:" />
                                <ComboBox Grid.Row="10" Grid.Column="0" Grid.ColumnSpan="2" ToolTip="{StaticResource fallDamageClearBloodTooltip}" IsEnabled="{Binding AreFallDamageModSettingsLoaded}" Visibility="{Binding FallDamageBloodSplatVisibility, Converter={StaticResource boolToVisibilityConverter}}" ItemsSource="{Binding Source={StaticResource keysEnumValues}}" SelectedItem="{Binding FallDamageClearBloodKey, Mode=TwoWay}"/>
                            </Grid>
                        </TabItem>

                        <TabItem x:Name="tabItemResizing" Header="Resizing">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.Resources>
                                    <ToolTip x:Key="resizingTooltip" DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
                                        <TextBlock>
                                            Will allow you to resize the window with the specified Grow and Shrink Keys!
                                        </TextBlock>
                                    </ToolTip>
                                </Grid.Resources>
                                <!-- Resizing Enabled  -->
                                <TextBlock Grid.Row="0" Grid.Column="0" Margin="5,2,10,2" ToolTip="{StaticResource resizingTooltip}" Text="Enabled: "/>
                                <CheckBox Grid.Row="0" Grid.Column="1" Margin="5,2,10,2" HorizontalAlignment="Right" ToolTip="{StaticResource resizingTooltip}" IsChecked="{Binding ManualResizingEnabled, Mode=TwoWay}" IsEnabled="{Binding AreFallDamageModSettingsLoaded}"/>
                                <TextBlock Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="5,2,10,2" FontSize="9" TextWrapping="Wrap">
                                    <Italic>
                                        This works best in Borderless or Windowed mode!
                                        <LineBreak/>
                                        Use the below Toggle Key to activate it once you start playing!
                                    </Italic>
                                </TextBlock>
                                <!-- Seperator -->
                                <Separator Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Visibility="{Binding ManualResizingEnabled, Converter={StaticResource boolToVisibilityConverter}}"/>
                                <!-- Toggle Button -->
                                <TextBlock Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Margin="5,2,10,2" ToolTip="{StaticResource resizingTooltip}" Visibility="{Binding ManualResizingEnabled, Converter={StaticResource boolToVisibilityConverter}}" Text="Toggle Key:" />
                                <ComboBox Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" ToolTip="{StaticResource resizingTooltip}" IsEnabled="{Binding AreFallDamageModSettingsLoaded}" Visibility="{Binding ManualResizingEnabled, Converter={StaticResource boolToVisibilityConverter}}" ItemsSource="{Binding Source={StaticResource keysEnumValues}}" SelectedItem="{Binding ManualResizingToggleKey, Mode=TwoWay}"/>
                                <!-- Grow Button -->
                                <TextBlock Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2" Margin="5,2,10,2" ToolTip="{StaticResource resizingTooltip}" Visibility="{Binding ManualResizingEnabled, Converter={StaticResource boolToVisibilityConverter}}" Text="Grow Key:" />
                                <ComboBox Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="2" ToolTip="{StaticResource resizingTooltip}" IsEnabled="{Binding AreFallDamageModSettingsLoaded}" Visibility="{Binding ManualResizingEnabled, Converter={StaticResource boolToVisibilityConverter}}" ItemsSource="{Binding Source={StaticResource keysEnumValues}}" SelectedItem="{Binding ManualResizingGrowKey, Mode=TwoWay}"/>
                                <!-- Shrink Button -->
                                <TextBlock Grid.Row="7" Grid.Column="0" Grid.ColumnSpan="2" Margin="5,2,10,2" ToolTip="{StaticResource resizingTooltip}" Visibility="{Binding ManualResizingEnabled, Converter={StaticResource boolToVisibilityConverter}}" Text="Shrink Key:" />
                                <ComboBox Grid.Row="8" Grid.Column="0" Grid.ColumnSpan="2" ToolTip="{StaticResource resizingTooltip}" IsEnabled="{Binding AreFallDamageModSettingsLoaded}" Visibility="{Binding ManualResizingEnabled, Converter={StaticResource boolToVisibilityConverter}}" ItemsSource="{Binding Source={StaticResource keysEnumValues}}" SelectedItem="{Binding ManualResizingShrinkKey, Mode=TwoWay}"/>
                            </Grid>
                        </TabItem>

                        <TabItem x:Name="tabRisingLava" Header="Rising Lava">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.Resources>
                                    <ToolTip x:Key="risingLavaTooltip" DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
                                        <TextBlock>
                                            Lava will raise up the map slowly, if you make contact with it you must restart!
                                        </TextBlock>
                                    </ToolTip>
                                    <ToolTip x:Key="risingLavaNiceSpawnsTooltip" DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
                                        <TextBlock>
                                            If enabled then touching the lava on a DLC map will reset you to the start of
                                            <LineBreak/>
                                            the DLC map instead of the bottom of the base map.
                                        </TextBlock>
                                    </ToolTip>
                                </Grid.Resources>
                                <!-- Rising Lava Enabled  -->
                                <TextBlock Grid.Row="0" Grid.Column="0" Margin="5,2,10,2" ToolTip="{StaticResource risingLavaTooltip}" Text="Enabled: "/>
                                <CheckBox Grid.Row="0" Grid.Column="1" Margin="5,2,10,2" HorizontalAlignment="Right" ToolTip="{StaticResource risingLavaTooltip}" IsChecked="{Binding RisingLavaEnabled, Mode=TwoWay}" IsEnabled="{Binding AreFallDamageModSettingsLoaded}"/>
                                <TextBlock Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="5,2,10,2" FontSize="9" TextWrapping="Wrap">
                                    <Italic>
                                        This mode will be inactive by default in game. 
                                        <LineBreak/>
                                        Use the below Toggle Key to activate it once you start playing!
                                    </Italic>
                                </TextBlock>
                                <!-- Seperator -->
                                <Separator Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Visibility="{Binding RisingLavaEnabled, Converter={StaticResource boolToVisibilityConverter}}"/>
                                <!-- Toggle Button -->
                                <TextBlock Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Margin="5,2,10,2" ToolTip="{StaticResource risingLavaTooltip}" Visibility="{Binding RisingLavaEnabled, Converter={StaticResource boolToVisibilityConverter}}" Text="Toggle Key:" />
                                <ComboBox Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" ToolTip="{StaticResource risingLavaTooltip}" IsEnabled="{Binding AreFallDamageModSettingsLoaded}" Visibility="{Binding RisingLavaEnabled, Converter={StaticResource boolToVisibilityConverter}}" ItemsSource="{Binding Source={StaticResource keysEnumValues}}" SelectedItem="{Binding RisingLavaToggleKey, Mode=TwoWay}"/>
                                <!-- Damage Modifier -->
                                <TextBlock Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2" Margin="5,2,10,2" ToolTip="{StaticResource risingLavaTooltip}" Visibility="{Binding RisingLavaEnabled, Converter={StaticResource boolToVisibilityConverter}}" Text="Rising Lava Speed:" />
                                <TextBox Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="2" ToolTip="{StaticResource risingLavaTooltip}" IsEnabled="{Binding AreFallDamageModSettingsLoaded}" Visibility="{Binding RisingLavaEnabled, Converter={StaticResource boolToVisibilityConverter}}" Text="{Binding RisingLavaSpeed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <!-- Nice Spawns -->
                                <TextBlock Grid.Row="7" Grid.Column="0" Margin="5,2,10,2" ToolTip="{StaticResource risingLavaNiceSpawnsTooltip}" Visibility="{Binding RisingLavaEnabled, Converter={StaticResource boolToVisibilityConverter}}" Text="Nice Spawns: " />
                                <CheckBox Grid.Row="7" Grid.Column="1" Margin="5,2,10,2" HorizontalAlignment="Right" ToolTip="{StaticResource risingLavaNiceSpawnsTooltip}" Visibility="{Binding RisingLavaEnabled, Converter={StaticResource boolToVisibilityConverter}}" IsChecked="{Binding RisingLavaNiceSpawns, Mode=TwoWay}" IsEnabled="{Binding AreFallDamageModSettingsLoaded}"/>
                            </Grid>
                        </TabItem>

                        <!--
                        <TabItem x:Name="tabItemChatDisplay" Header="Chat Display">
                            <TabItem.Style>
                                <Style TargetType="{x:Type TabItem}">
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsStreamingOnTwitch}" Value="True">
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TabItem.Style>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Grid.Column="0" Margin="5,2,10,2" Text="Enabled: " />
                                <CheckBox Grid.Row="0" Grid.Column="1" Margin="5,2,10,2" HorizontalAlignment="Right" IsChecked="{Binding ChatDisplayEnabled, Mode=TwoWay}" IsEnabled="{Binding AreRavenModSettingsLoaded}"/>
                            </Grid>
                        </TabItem>
                        -->
                        <TabItem x:Name="tabItemFly" Header="Fly">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.Resources>
                                    <ToolTip x:Key="freeFlyTooltip" DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
                                        <TextBlock>
                                            Allows you to make the Jump King Fly. Enabling this option will disable achievements.
                                        </TextBlock>
                                    </ToolTip>
                                </Grid.Resources>
                                <!-- Free Fly Enabled -->
                                <TextBlock Grid.Row="0" Grid.Column="0" Margin="5,2,10,2" ToolTip="{StaticResource freeFlyTooltip}" Text="Enabled: " />
                                <CheckBox Grid.Row="0" Grid.Column="1" Margin="5,2,10,2" HorizontalAlignment="Right" ToolTip="{StaticResource freeFlyTooltip}" IsChecked="{Binding FreeFlyingEnabled, Mode=TwoWay}" IsEnabled="{Binding AreRavenModSettingsLoaded}"/>
                                <TextBlock Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="5,2,10,2" FontSize="9" TextWrapping="Wrap">
                                    <Italic>
                                        Enabling this option will disable Steam Achievements in the game!
                                    </Italic>
                                </TextBlock>
                                <!-- Seperator -->
                                <Separator Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Visibility="{Binding FreeFlyingEnabled, Converter={StaticResource boolToVisibilityConverter}}"/>
                                <!-- Debug Button -->
                                <TextBlock Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Margin="5,2,10,2" ToolTip="{StaticResource freeFlyTooltip}" Visibility="{Binding FreeFlyingEnabled, Converter={StaticResource boolToVisibilityConverter}}" Text="Toggle Key:" />
                                <ComboBox Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" ToolTip="{StaticResource freeFlyTooltip}" IsEnabled="{Binding AreRavenModSettingsLoaded}" Visibility="{Binding FreeFlyingEnabled, Converter={StaticResource boolToVisibilityConverter}}" ItemsSource="{Binding Source={StaticResource keysEnumValues}}" SelectedItem="{Binding FreeFlyToggleKey, Mode=TwoWay}"/>
                            </Grid>
                        </TabItem>
                    </TabControl>
                    <!-- Update Settings Button-->
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Content="Save Settings" MaxWidth="100" MinWidth="100" Margin="5" HorizontalAlignment="Right" Command="{Binding UpdateSettingsCommand}"/>
                        <Button Content="Load Settings" MaxWidth="100" MinWidth="100" Margin="5" HorizontalAlignment="Right" Command="{Binding LoadSettingsCommand}"/>
                    </StackPanel>
                </StackPanel>
            </GroupBox>
        </StackPanel>
    </DockPanel>
</Window>
